generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// No User model needed - we'll reference Supabase's auth.users directly
// Just reference the user ID as a UUID

model Genre {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  movies Movie[]
}

model Director {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  movies Movie[]
}

model Actor {
  id     Int          @id @default(autoincrement())
  name   String       @unique
  movies MovieActor[]
}

model MovieActor {
  id      Int   @id @default(autoincrement())
  movieId Int
  actorId Int
  movie   Movie @relation(fields: [movieId], references: [id])
  actor   Actor @relation(fields: [actorId], references: [id])

  @@unique([movieId, actorId])
}

model Movie {
  id             Int                 @id @default(autoincrement())
  title          String
  slug           String              @unique
  releaseYear    Int?
  rating         Float?
  overview       String?
  poster         String?
  trailerUrl     String?
  genreId        Int?
  genre          Genre?              @relation(fields: [genreId], references: [id])
  directorId     Int?
  director       Director?           @relation(fields: [directorId], references: [id])
  actors         MovieActor[]
  favorites      UserFavoriteMovie[]
  recentSearches UserRecentSearch[]
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
}

model UserRecentSearch {
  id         Int      @id @default(autoincrement())
  userId     String   @db.Uuid   // UUID from Supabase auth.users
  movieId    Int
  movie      Movie    @relation(fields: [movieId], references: [id])
  searchedAt DateTime @default(now())

  @@unique([userId, movieId])
  @@index([userId])
}

model UserFavoriteMovie {
  id        Int      @id @default(autoincrement())
  userId    String   @db.Uuid   // UUID from Supabase auth.users
  movieId   Int
  movie     Movie    @relation(fields: [movieId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, movieId])
}
